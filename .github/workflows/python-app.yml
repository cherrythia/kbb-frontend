# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application - Unit Test, SAST

on:
  push:
    branches: 
     - '**' 
  # pull_request:
  #   branches: [ "main" ]

permissions:
  contents: read
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        #pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest and generate coverage file
      run: |
          pytest --cov=src --cov-report xml:tests/coverage.xml tests/
          pwd
          ls -al
    - uses: actions/upload-artifact@master
      with:
        name: artifact
        path: ${{ github.workspace }}/
        retention-days: 5

  sonar:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@master
      with:
        name: artifact
        path: ${{ github.workspace }}/
    - name: check contents
      run: |
          pwd
          ls -al
    - name: Analyze with SonarCloud
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)